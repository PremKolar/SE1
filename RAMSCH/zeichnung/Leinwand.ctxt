#BlueJ class context
comment0.params=
comment0.target=Leinwand\ gibLeinwand()
comment0.text=\n\ Liefert\ eine\ Referenz\ auf\ das\ einzige\ Exemplar\ dieser\ Klasse.\n\ \n\ @return\ Leinwand\n
comment1.params=titel\ breite\ hoehe\ grundfarbe
comment1.target=Leinwand(java.lang.String,\ int,\ int,\ java.awt.Color)
comment1.text=\n\ Erzeuge\ eine\ Leinwand.\n\ \n\ @param\ titel\n\ \ \ \ \ \ \ \ \ \ \ \ Titel,\ der\ im\ Rahmen\ der\ Leinwand\ angezeigt\ wird\n\ @param\ breite\n\ \ \ \ \ \ \ \ \ \ \ \ die\ gewuenschte\ Breite\ der\ Leinwand\n\ @param\ hoehe\n\ \ \ \ \ \ \ \ \ \ \ \ die\ gewuenschte\ Hoehe\ der\ Leinwand\n\ @param\ grundfarbe\n\ \ \ \ \ \ \ \ \ \ \ \ die\ Hintergrundfarbe\ der\ Leinwand\n
comment10.params=millisekunden
comment10.target=void\ warte(int)
comment10.text=\n\ Warte\ fuer\ die\ angegebenen\ Millisekunden.\ Mit\ dieser\ Operation\ wird\ eine\n\ Verzoegerung\ definiert,\ die\ fuer\ animierte\ Zeichnungen\ benutzt\ werden\n\ kann.\n\ \n\ @param\ millisekunden\n\ \ \ \ \ \ \ \ \ \ \ \ die\ zu\ wartenden\ Millisekunden\n
comment2.params=evt
comment2.target=void\ componentResized(java.awt.event.ComponentEvent)
comment3.params=
comment3.target=void\ calculateGraphics()
comment4.params=
comment4.target=void\ neuZeichnen()
comment5.params=g
comment5.target=void\ paint(java.awt.Graphics)
comment6.params=sichtbar
comment6.target=void\ setzeSichtbarkeit(boolean)
comment6.text=\n\ Setze,\ ob\ diese\ Leinwand\ sichtbar\ sein\ soll\ oder\ nicht.\ Wenn\ die\ Leinwand\n\ sichtbar\ gemacht\ wird,\ wird\ ihr\ Fenster\ in\ den\ Vordergrund\ geholt.\ Diese\n\ Operation\ kann\ auch\ benutzt\ werden,\ um\ ein\ bereits\ sichtbares\n\ Leinwandfenster\ in\ den\ Vordergrund\ (vor\ andere\ Fenster)\ zu\ holen.\n\ \n\ @param\ sichtbar\n\ \ \ \ \ \ \ \ \ \ \ \ boolean\ fuer\ die\ gewuenschte\ Sichtbarkeit\:\ true\ fuer\ sichtbar,\n\ \ \ \ \ \ \ \ \ \ \ \ false\ fuer\ nicht\ sichtbar.\n
comment7.params=figur\ farbe\ shape
comment7.target=void\ zeichne(java.lang.Object,\ java.lang.String,\ java.awt.Shape)
comment7.text=\n\ Zeichne\ fuer\ das\ gegebene\ Figur-Objekt\ eine\ Java-Figur\ (einen\ Shape)\ auf\n\ die\ Leinwand.\n\ \n\ @param\ figur\n\ \ \ \ \ \ \ \ \ \ \ \ das\ Figur-Objekt,\ fuer\ das\ ein\ Shape\ gezeichnet\ werden\ soll\n\ @param\ farbe\n\ \ \ \ \ \ \ \ \ \ \ \ die\ Farbe\ der\ Figur\n\ @param\ shape\n\ \ \ \ \ \ \ \ \ \ \ \ ein\ Objekt\ der\ Klasse\ Shape,\ das\ tatsaechlich\ gezeichnet\ wird\n
comment8.params=figur
comment8.target=void\ entferne(java.lang.Object)
comment8.text=\n\ Entferne\ die\ gegebene\ Figur\ von\ der\ Leinwand.\n\ \n\ @param\ figur\n\ \ \ \ \ \ \ \ \ \ \ \ die\ Figur,\ deren\ Shape\ entfernt\ werden\ soll\n
comment9.params=farbname
comment9.target=void\ setzeZeichenfarbe(java.lang.String)
comment9.text=\n\ Setze\ die\ Zeichenfarbe\ der\ Leinwand.\n\ \n\ @param\ farbname\n\ \ \ \ \ \ \ \ \ \ \ \ der\ Name\ der\ neuen\ Zeichenfarbe.\n
numComments=11
